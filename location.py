from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, ConversationHandler
from geopy import distance

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def check_location_mxat(update: Update, context: CallbackContext) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    location = update.message.location
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    target_latitude = 55.760236
    target_longitude = 37.612991
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏
    user_location = (location.latitude, location.longitude)
    target_location = (target_latitude, target_longitude)
    distance_in_meters = distance.distance(user_location, target_location).m
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–∞–¥–∏—É—Å–µ 100 –º–µ—Ç—Ä–æ–≤ –æ—Ç –º–µ—Å—Ç–∞
    if distance_in_meters <= 300:
        message = "–í—Å–µ –≤–µ—Ä–Ω–æ! üëè –°–ª–µ–¥—É—é—â–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—à–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ ‚Äì –ú–•–¢ –∏–º. –ß–µ—Ö–æ–≤–∞!"
    else:
        message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –Ω–µ —É–≥–∞–¥–∞–ª üôÅ \n–ü–æ–¥—É–º–∞–π –µ—â–µ!"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(message)


def check_location_nations(update: Update, context: CallbackContext) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    location = update.message.location
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    target_latitude = 55.765944
    target_longitude = 37.612748
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏
    user_location = (location.latitude, location.longitude)
    target_location = (target_latitude, target_longitude)
    distance_in_meters = distance.distance(user_location, target_location).m
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–∞–¥–∏—É—Å–µ 100 –º–µ—Ç—Ä–æ–≤ –æ—Ç –º–µ—Å—Ç–∞
    if distance_in_meters <= 300:
        message = "–í—ã –Ω–∞ –º–µ—Å—Ç–µ!"
    else:
        message = "–í—ã –Ω–µ –Ω–∞ –º–µ—Å—Ç–µ :("
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(message)


def check_location_lenkom(update: Update, context: CallbackContext) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    location = update.message.location
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    target_latitude = 55.767762
    target_longitude = 37.606909
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏
    user_location = (location.latitude, location.longitude)
    target_location = (target_latitude, target_longitude)
    distance_in_meters = distance.distance(user_location, target_location).m
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–∞–¥–∏—É—Å–µ 100 –º–µ—Ç—Ä–æ–≤ –æ—Ç –º–µ—Å—Ç–∞
    if distance_in_meters <= 300:
        message = "–í—ã –Ω–∞ –º–µ—Å—Ç–µ!"
    else:
        message = "–í—ã –Ω–µ –Ω–∞ –º–µ—Å—Ç–µ :("
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(message)


def check_location_electro(update: Update, context: CallbackContext) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    location = update.message.location
    
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
    target_latitude = 55.766825
    target_longitude = 37.600945
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏
    user_location = (location.latitude, location.longitude)
    target_location = (target_latitude, target_longitude)
    distance_in_meters = distance.distance(user_location, target_location).m
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–∞–¥–∏—É—Å–µ 100 –º–µ—Ç—Ä–æ–≤ –æ—Ç –º–µ—Å—Ç–∞
    if distance_in_meters <= 300:
        message = "–í—ã –Ω–∞ –º–µ—Å—Ç–µ!"
    else:
        message = "–í—ã –Ω–µ –Ω–∞ –º–µ—Å—Ç–µ :("
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /check
def start(update: Update, context: CallbackContext) -> None:
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã —è –ø—Ä–æ–≤–µ—Ä–∏–ª –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    return "LOCATION"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
def location(update: Update, context: CallbackContext) -> None:
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    check_location_mxat(update, context)
    
    # –°–Ω–∏–º–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    return ConversationHandler.END

# # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç updater –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
# updater = Updater("5431544410:AAE8CXiXkE3ZZcB1TxvMXTZhJwxMcGwtnMU")
# dispatcher = updater.dispatcher

# # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /check
# start_handler = CommandHandler("check", start)

# # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
# location_handler = MessageHandler(Filters.location, location)

# # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã /check –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
# dispatcher.add_handler(start_handler)
# dispatcher.add_handler(ConversationHandler(
#     entry_points=[location_handler],
#     states={"LOCATION": [location_handler]},
#     fallbacks=[]
# ))

# # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
# updater.start_polling()
# updater.idle()
