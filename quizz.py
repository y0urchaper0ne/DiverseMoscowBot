def bolshoi_history_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π —Ç–µ–∞—Ç—Ä', '–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π']:
        return 'Merci! –í—Å–µ —Ç–∞–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–º üòï'


def bolshoi_building_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['22']:
        return 'Bravo! –ò–∑ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'

def bolshoi_to_mxat_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–º—Ö—Ç', '–º—Ö—Ç —á–µ—Ö–æ–≤–∞', '–º—Ö—Ç –∏–º–µ–Ω–∏ —á–µ—Ö–æ–≤–∞', '–º—Ö—Ç –∏–º.—á–µ—Ö–æ–≤–∞',
                        '–º–æ—Å–∫–æ–≤—Å–∫–∏–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∞—Ç—Ä –∏–º–µ–Ω–∏ —á–µ—Ö–æ–≤–∞', 
                        '–º–æ—Å–∫–æ–≤—Å–∫–∏–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∞—Ç—Ä',]:
        return 'G√©nial! –°–ª–µ–¥—É—é—â–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—à–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ ‚Äî –ú–•–¢ –∏–º. –ß–µ—Ö–æ–≤–∞!'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'


def mxat_history_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–¥—è–¥—è –≤–∞–Ω—è']:
        return 'Parfait! –í—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤—ã'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–º üòï'


def mxat_building_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–º–∞–ª–∞—è —Å—Ü–µ–Ω–∞']:
        return 'Chic! –ò –ø—Ä–∞–≤–¥–∞'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'
    

def mxat_to_nations_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['—Ç–µ–∞—Ç—Ä –Ω–∞—Ü–∏–π', '–Ω–∞—Ü–∏–π']:
        return 'G√©nial! –°–ª–µ–¥—É—é—â–∞—è —Ç–æ—á–∫–∞ ‚Äî –¢–µ–∞—Ç—Ä –ù–∞—Ü–∏–π!'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'


def nations_history_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π —Ç–µ–∞—Ç—Ä', '–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π']:
        return 'Merci! –í—Å–µ —Ç–∞–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–º üòï'


def nations_building_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['22']:
        return 'Bravo! –ò–∑ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'


def lenkom_history_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π —Ç–µ–∞—Ç—Ä', '–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π']:
        return 'Merci! –í—Å–µ —Ç–∞–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–º üòï'


def lenkom_building_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['22']:
        return 'Bravo! –ò–∑ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'


def electro_history_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π —Ç–µ–∞—Ç—Ä', '–±–æ–ª—å—à–æ–π –ø–µ—Ç—Ä–æ–≤—Å–∫–∏–π']:
        return 'Merci! –í—Å–µ —Ç–∞–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–º üòï'


def electro_building_question(input_text):
    user_message = str(input_text).lower()
    if user_message in ['22']:
        return 'Bravo! –ò–∑ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–π –º–∞—Ç–µ–º–∞—Ç–∏–∫ ü•≥'
    else: 
        return 'Oh-la-la! –ù–µ —Å–æ–≤—Å–µ–ºüòï'
